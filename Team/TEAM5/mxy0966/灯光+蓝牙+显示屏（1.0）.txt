#include <SoftwareSerial.h>
#include <Servo.h>
#include <U8glib.h>
#include <Microduino_ColorLED.h> //引用彩灯库
String currentInfo="";
#define my_Serial Serial
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);
#define setFont_L u8g.setFont(u8g_font_unifont)
#define setFont_S u8g.setFont(u8g_font_fixed_v0r)
#define setFont_M u8g.setFont(u8g_font_9x15)
#define PIN            A0         //彩灯引脚
#define NUMPIXELS      6        //级联彩灯数量
#define val_max 255
#define val_min 0
ColorLED strip = ColorLED(NUMPIXELS, PIN);
Servo servo_2;
char item;
void BLE_to_control();
void setup()
{
  Serial.begin(9600);
  my_Serial.begin(57600);
  pinMode(12, OUTPUT);
  servo_2.attach(2);
  Serial.println('2');
  strip.begin();                 //彩灯初始化
  strip.show();
}
void loop()
{
  digitalWrite(12,LOW);
  BLE_to_control();
   if (!digitalRead(10)) {
    digitalWrite(12,HIGH);
  u8g.undoRotation();
  u8g.firstPage();
  do {
    setFont_M;
    u8g.setPrintPos(0, 20);
    u8g.print("Closed by button!");
  } while( u8g.nextPage() );
    servo_2.write(90);
    rainbowCycle(5);
  }
    if (Serial.available() > 0) {
    item = Serial.read();
    if (item=='0') {
      servo_2.write(0);
      Serial.write(item);
      delay(0);
    }
    Serial.flush();
  }
  //if (!digitalRead(8)) Serial.println('1');
}
void BLE_to_control()
{
if (my_Serial.available() > 0) {
   currentInfo = my_Serial.readStringUntil('\n');
    if (currentInfo == "on") {
      servo_2.write(180);
      digitalWrite(12,HIGH);
      my_Serial.println("Open successfully!");
        u8g.undoRotation();
  u8g.firstPage();
  do {
    setFont_M;
    u8g.setPrintPos(0, 20);
    u8g.print("Opened");
  } while( u8g.nextPage() );
      rainbow(18);
      delay(50);
    } else if (currentInfo == "off") {
      servo_2.write(90);
      my_Serial.println("Closed!");
      digitalWrite(12,HIGH);
        u8g.undoRotation();
  u8g.firstPage();
  do {
    setFont_M;
    u8g.setPrintPos(0, 20);
    u8g.print("Closed!");
  } while( u8g.nextPage() );
      rainbowCycle(5);
      //delay(50);
    }
  }
}    //蓝牙+按键+显示屏（在线）
void rainbow(uint8_t wait) {
  uint16_t i, j;
  for(j=0; j<256; j++) {
    for(i=0; i<strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel((i+j) & 255));
    }
    strip.show();
    delay(wait);
  }
}
// Input a value 0 to 255 to get a color value.
// The colours are a transition r - g - b - back to r.
uint32_t Wheel(byte WheelPos) {
  WheelPos = 255 - WheelPos;
  if(WheelPos < 85) {
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  }
  if(WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
  WheelPos -= 170;
  return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
}
void rainbowCycle(uint8_t wait) {
  uint16_t i, j;
  for (j = 0; j < 256 * 5; j++) { // 5 cycles of all colors on wheel
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
    }
    strip.show();
    delay(wait);
  }
}
//开门：渐变灯时间太短，优化：显示屏显示下一条指令开始：Enter Password!
